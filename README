README
Aug. 17, 2005

==============================================================================

BUILDING FROM CVS:

You should run bootstrap from the main directory to correctly initialize
the project.  From there, run configure as you would normally do.  Configure 
options are explained below.

    $ ./bootstrap && ./configure && make

==============================================================================

BUILDING FROM TARBALL:

As you would expect, run configure and make.  Configure options are explained below.

    $ ./configure && make

==============================================================================

CONFIGURE OPTIONS:

This file contains hints for building the sources.  There are a number of
build targets, some of which are not built automatically.  Here is the
breakdown (input.o is only for kernel 2.4).

      wacom.o: not built by default (--enable-wacom, --disable-wacom)
      wacdump: built by default (--enable-wacdump, --disable-wacdump)
        hid.o: not built by default (--enable-hid, --disable-hid)
      evdev.o: not built by default (--enable-evdev, --disable-evdev)
   mousedev.o: not built by default (--enable-mousedev, --disable-mousedev)
   usbmouse.o: not built by default (--enable-usbmouse, --disable-usbmouse)
      input.o: not built by default (--enable-input, --disable-input)
  wacom_drv.o: built by default (--enable-wacomdrv, --disable-wacomdrv)

There are many options, and configure will attempt to guess the correct
values for most of them.  By default, only wacomcpl, xsetwacom, wacom_drv.o, 
xidump, and wacdump program are built.

REQUIREMENTS:

wacom, hid, evdev, mousedev, and usbmouse are kernel modules and require the 
kernel sources to be present.  On a Redhat 8.0 system with the kernel-sources
RPM installed, the source directory is located at /usr/src/linux-2.4.
The configuration script will search for this directory automatically as 
well as /usr/src/linux.  You can override the directory using the 
--with-kernel=<directory> option.

For kernel 2.6.x, a kernel source with which your tablet is going to run should 
be precompiled before configuring linuxwacom package. For the steps to build a 
kernel from source, please refer to your source's README or www.kernel.org. For 
kernels newer than 2.6.4 (and you are not using Intuos3), wacom.c and hid-core.c 
are up to date, that is, you probably don't need to build the kernel. But, if you 
want to use the "hotplug" feature of the tablet, you need to build evdev from this 
package. If mousedev and/or usbmouse are used by your running kernel, you need to 
build these pieces since they will let mouse driver ignore Wacom tablet so Wacom 
driver can take control of the tablet. Please DO NOT compile and load usbmouse 
module if your system did not load it.

wacom_drv.o requires XFree86 sources as well as a functional XF86 build  
environment or xorg-sdk if your X server is from x.org.  Since this is a more 
complicated setup and few people are going to want to rebuild this driver from  
source, the wacom_drv.o files are supplied with the linuxwacom package in the 
prebuilt directory.  If the prebuilt wacom_drv.o module doesn't work for you, 
see the section "Building wacom_drv.o From Scratch."
	
BUILDING wacom_drv.o FROM SCRATCH

If your system runs an X server from XFree86, you need the XFree86 
source code, and you will need to actually build it.  The file 
xf86Version.h is generated during the build process and is a required 
dependency for building wacom_drv.o.  If your system runs an X server 
from x.org, you need to install xorg-sdk. The configure script will 
attempt to build wacom-drv.o by default,  but you need to provide the 
--with-xf86=<xf86_directory> option.  If you don't want to build wacom-drv.o, 
the option --disable-wacomdrv needs to be provided.

If the xf86Version.h file is located at:
	/usr/local/src/XFree86-4.2.0/xc/programs/Xserver/include/xf86Version.h

Then the correct configure option to build wacom_drv.o would be:
	--with-xf86=/usr/local/src/XFree86-4.2.0

INSTALL default

Generally, you run the configure script followed by make install.  This package 
will install wacom_drv.o, xidump, wacdump, xsetwacom, and wacomcpl. The kernel 
drivers will not be installed.  Please see the documentation on the website for 
more information on where specific drivers belong.

    [jej@haku linuxwacom-dev] $ ./configure
    [jej@haku linuxwacom-dev] $ su
    [root@haku linuxwacom-dev] # make install 

INSTALL wacomcpl (detail)

wacomcpl is a tcl/tk based control panel. It requires tcl/tk being installed. 
The configure script will attempt to build wacomxi libs by searching /usr/include 
and /usr/lib for tcl and tk hearders and libs. You can override the directories
using the --with-tcl=<directory> and --with-tk=<directory> options.

If the tcl.h is located at /usr/local/tcl8.4/include and the libtcl8.4.so at 
/usr/local/tcl8.4/lib, you need to:

First link /usr/local/tcl8.4/lib/libtcl8.4.so to /usr/lib/libtcl.so.0:
	ln -s /usr/local/tcl8.4/lib/libtcl8.4.so /usr/lib/libtcl.so.0

Then use the configure option:
	--with-tcl=/usr/local/tcl8.4

If the tk.h is located at /usr/local/tk8.4/include and the libtk8.4.so at 
/usr/local/tk8.4/lib, then the correct steps would be:
	ln -s /usr/local/tk8.4/lib/libtk8.4.so /usr/lib/libtk.so.0

Then use the configure option:
	--with-tk=/usr/local/tk8.4

If both tcl and tk under the same directory, say /usr/local/tcl8.4, then the steps are:
	ln -s /usr/local/tcl8.4/lib/libtcl8.4.so /usr/lib/libtcl.so.0
	ln -s /usr/local/tcl8.4/lib/libtk8.4.so /usr/lib/libtk.so.0

And use the configure option:
	--with-tcl=/usr/local/tcl8.4


INSTALL kernel pieces

for kernel 2.4.22 or newer: 
    [root@haku linuxwacom-dev] # cp src/2.4.22/hid.o /lib/modules/your_kernel_version/kernel/drivers/usb 
    [root@haku linuxwacom-dev] # cp src/2.4.22/usbmouse.o /lib/modules/your_kernel_version/kernel/drivers/usb
    [root@haku linuxwacom-dev] # cp src/2.4.22/wacom.o /lib/modules/your_kernel_version/kernel/drivers/usb 
    [root@haku linuxwacom-dev] # cp src/2.4.22/mousedev.o /lib/modules/your_kernel_version/kernel/drivers/input 
    [root@haku linuxwacom-dev] # cp src/2.4.22/evdev.o /lib/modules/your_kernel_version/kernel/drivers/input
    [root@haku linuxwacom-dev] # cp src/2.4.22/input.o /lib/modules/your_kernel_version/kernel/drivers/input 

for kernels older than 2.4.22: 
    [root@haku linuxwacom-dev] # cp src/2.4/hid.o /lib/modules/your_kernel_version/kernel/drivers/usb 
    [root@haku linuxwacom-dev] # cp src/2.4/usbmouse.o /lib/modules/your_kernel_version/kernel/drivers/usb
    [root@haku linuxwacom-dev] # cp src/2.4/wacom.o /lib/modules/your_kernel_version/kernel/drivers/usb 
    [root@haku linuxwacom-dev] # cp src/2.4/mousedev.o /lib/modules/your_kernel_version/kernel/drivers/input 
    [root@haku linuxwacom-dev] # cp src/2.4/evdev.o /lib/modules/your_kernel_version/kernel/drivers/input
    [root@haku linuxwacom-dev] # cp src/2.4/input.o /lib/modules/your_kernel_version/kernel/drivers/input 

for kernel 2.6.x
    [root@haku linuxwacom-dev] # cp src/2.6.x/hid.ko /lib/modules/your_kernel_version/kernel/drivers/usb/input 
    [root@haku linuxwacom-dev] # cp src/2.6.x/wacom.ko /lib/modules/your_kernel_version/kernel/drivers/usb/input 
    [root@haku linuxwacom-dev] # cp src/2.6.x/usbmouse.ko /lib/modules/your_kernel_version/kernel/drivers/usb/input 
    [root@haku linuxwacom-dev] # cp src/2.6.x/evdev.ko /lib/modules/your_kernel_version/kernel/drivers/input 
    [root@haku linuxwacom-dev] # cp src/2.6.x/mousedev.ko /lib/modules/your_kernel_version/kernel/drivers/input 

==============================================================================

WEBSITE: http://linuxwacom.sf.net

